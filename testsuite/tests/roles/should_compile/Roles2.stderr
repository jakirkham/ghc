TYPE SIGNATURES
  Roles2.K1 :: forall a. IO a -> T1 a
  Roles2.K2 :: forall a. FunPtr a -> T2 a
TYPE CONSTRUCTORS
  data T1 a = K1 (IO a)
  type role T2 phantom
  data T2 a = K2 (FunPtr a)
COERCION AXIOMS
Dependent modules: []
Dependent packages: [base-4.9.0.0, ghc-prim-0.5.0.0,
                     integer-gmp-1.0.0.1]

==================== Typechecker ====================
Roles2.$tcT2
  = GHC.Types.$WTyCon
      5934726586329293381##
      1923031187495159753##
      Roles2.$trModule
      (GHC.Types.$WTrNameS "T2"#)
Roles2.$tc'K2
  = GHC.Types.$WTyCon
      1362115092449420584##
      15899377929296700609##
      Roles2.$trModule
      (GHC.Types.$WTrNameS "'K2"#)
Roles2.$tcT1
  = GHC.Types.$WTyCon
      13879106829711353992##
      15151456821588362072##
      Roles2.$trModule
      (GHC.Types.$WTrNameS "T1"#)
Roles2.$tc'K1
  = GHC.Types.$WTyCon
      14735176013935828521##
      17563925141462511949##
      Roles2.$trModule
      (GHC.Types.$WTrNameS "'K1"#)
Roles2.$trModule
  = GHC.Types.$WModule
      (GHC.Types.$WTrNameS "main"#) (GHC.Types.$WTrNameS "Roles2"#)

